{
  "name": "terraformer-rtree",
  "version": "0.2.4",
  "description": "Terraformer RTree",
  "main": "index.js",
  "scripts": {
    "test": "vows --spec"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:esri/Terraformer.git"
  },
  "devDependencies": {
    "vows": "latest"
  },
  "dependencies": {
    "terraformer": "latest"
  },
  "author": "",
  "license": "MIT",
  "contributors": [
    {
      "name": "Patrick Arlt",
      "email": "patrick.arlt@gmail.com",
      "url": "http://patrickarlt.com"
    },
    {
      "name": "Jerry Sievert",
      "email": "code@legitimatesounding.com",
      "url": "http://legitimatesounding.com"
    }
  ],
  "readme": "# Terraformer RTree\n\nThis package is part of the [Terraformer](https://github.com/Geoloqi/Terraformer) project.\n\nA simple RTree implementation based off of `rtree.js`.  Uses `envelopes` to search: a match is `envelope` to `envelope`, not with `polygon` matching.  It is then up to the user to determine whether the `polygon` is contained or intersects with the result returned.\n\n## Installing\n\n    $ npm install terraformer-rtree \n\n## Usage\n\n    var rtree = require('terraformer-rtree');\n    \n    var tree = new rtree.RTree();\n    tree.insert({ x: 10, y: 10, w: 10, h: 10 }, 'good');\n    \n    // should return [ 'good' ]\n    tree.search({ x: 15, y: 15, w: 0, h: 0 }, function (results) {\n      // should return [ 'good' ]\n    });\n\n## API Reference\n\n```javascript\nnew RTree()\n\n// instance methods\ninsert(envelope, obj) // insert an envelope and an object\nremove(envelope, obj) // remove an envelope and an object\nsearch(envelope, callback) // find all envelopes that could contain this envelope, returns an array\nserialize() // returns a JSON representation of the tree\ndeserialize(json) // sets the tree from a JSON representation\n```\n",
  "readmeFilename": "Readme.md",
  "_id": "terraformer-rtree@0.2.4",
  "_from": "terraformer-rtree"
}
